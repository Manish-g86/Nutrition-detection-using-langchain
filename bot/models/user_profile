class UserProfile:
    def __init__(self, user_id, age, gender, weight, height, activity_level, goal):
        self.user_id = user_id
        self.age = age
        self.gender = gender
        self.weight = weight
        self.height = height
        self.activity_level = activity_level
        self.goal = goal
        self.bmr = None
        self.total_calories = None
        self.protein = None
        self.fat = None
        self.carbs = None

    def calculate_bmr(self):
        """Calculates Basal Metabolic Rate (BMR) based on user data."""
        if self.gender.lower() == 'male':
            self.bmr = 10 * self.weight + 6.25 * self.height - 5 * self.age + 5
        elif self.gender.lower() == 'female':
            self.bmr = 10 * self.weight + 6.25 * self.height - 5 * self.age - 161
        else:
            raise ValueError("Gender must be 'male' or 'female'")

    def adjust_for_activity(self):
        """Adjusts the BMR for different activity levels."""
        if self.activity_level == "sedentary":
            self.total_calories = self.bmr * 1.2
        elif self.activity_level == "lightly_active":
            self.total_calories = self.bmr * 1.375
        elif self.activity_level == "moderately_active":
            self.total_calories = self.bmr * 1.55
        elif self.activity_level == "very_active":
            self.total_calories = self.bmr * 1.725
        elif self.activity_level == "extra_active":
            self.total_calories = self.bmr * 1.9
        else:
            raise ValueError("Invalid activity level")
    def calculate_macros(self):
        """Calculates the macro-nutrients based on goal."""
        if self.goal == "weight_loss":
            self.protein = 0.3 * self.total_calories / 4
            self.fat = 0.3 * self.total_calories / 9
            self.carbs = 0.4 * self.total_calories / 4
        elif self.goal == "muscle_gain":
            self.protein = 0.35 * self.total_calories / 4
            self.fat = 0.25 * self.total_calories / 9
            self.carbs = 0.4 * self.total_calories / 4
        elif self.goal == "weight_maintenance":
            self.protein = 0.25 * self.total_calories / 4
            self.fat = 0.3 * self.total_calories / 9
            self.carbs = 0.45 * self.total_calories / 4
        else:
            raise ValueError("Invalid goal. Choose from 'weight_loss', 'muscle_gain', or 'weight_maintenance'")
    def to_dict(self):
        """Converts the profile into a dictionary for easy storage."""
        return {
            "user_id": self.user_id,
            "age": self.age,
            "gender": self.gender,
            "weight": self.weight,
            "height": self.height,
            "activity_level": self.activity_level,
            "goal": self.goal,
            "bmr": self.bmr,
            "total_calories": self.total_calories,
            "protein": self.protein,
            "fat": self.fat,
            "carbs": self.carbs
        }
